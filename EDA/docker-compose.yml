version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: 'zookeeper:2888:3888'

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - '9000:9000'
    environment:
      KAFKA_BROKERCONNECT: kafka:9093

  mongo:
    container_name: mongo
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - ./data/mongo:/data/db

  postgres:
    container_name: postgres
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  app1:
    container_name: app1
    build: ./app1
    ports:
      - 8080:8080
    volumes:
      - ./app1:/app
    environment:
      PORT: 8080
      POSTGRES_URL: postgres://postgres:postgres@postgres:5432/postgres
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_TOPIC: topic1
    depends_on:
      - postgres
      - kafka

  app2:
    container_name: app2
    build: ./app2
    ports:
      - 8081:8080
    volumes:
      - ./app2:/app
    environment:
      PORT: 8081
      MONGO_URL: mongodb://mongo:27017/app2
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_TOPIC: topic1
    depends_on:
      - postgres
      - kafka
